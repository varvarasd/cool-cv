// CSS TRICK - part 2
// This trick works by making use of the change state
// of the input type radio and the next sibling CSS selector "+"
// Example:
//   This will target all unchecked input elements with class .my-input
//   .my-input { margin-left: 10px; }
//   This will target all checked input elements with class .my-input
//   .my-input:checked { margin-left: 20px; }
// input type radio elements can be grouped by using
// the name attribute with the same value, thus ensuring
// only one input can be checked at one time
// HTML example of an input and its sibling
//   <input type="radio" id="myCustomUniqueId" />
//   <p>Label text</p>
//   #myCustomUniqueId:checked + p { color: blue }
// The example above will make the text content inside the paragraph
// tag of color bluewhen the input #myCustomUniqueId is checked.
//
// Summary:
// 1. The label linked to the input changes the state of
// the input when clicked
// 2. The next sibling of the input can be targeted with
// different CSS rules based on the checked state of the input

$class: 'home-message';

.#{$class}-radio  .#{$class} {
  // Hide all .home-message that follow as sibling
  // an input type radio with checked state as false
  display: none;
}

#message-default.#{$class}-radio:checked + .#{$class} + .#{$class}-box-header {
  // Hide .home-message-box-header when no link is selected
  display: none;
}
.#{$class}-radio:checked + .#{$class} {
  // Change display state of the .home-message from
  // hidden to show based on the checked state true
  // of the input type radio
  display: inherit;
}

// Hide the input type radio elements to clean interface
input.#{$class}-radio[type=radio] {
  display: none;
}

// Create a rounded corners rectangle
.#{$class}-body {
  // That doesn't break on new line
  display: inline-block;
  // With white border
  border: 0.2rem solid $color-white;
   // that has rounded corners
  border-radius: 0.5rem;
  // and enough clear space between border and text content
  padding: 0.8rem;
  // and enough space on top of it away from social box
  margin-top: 0.5rem;
  // set the position to relative so the children that have
  // position: absolute will be bound to this container
  position: relative;
}

// Hide the input type radio elements
.#{$class}-link,
.#{$class}-link:visited {
  font-size: 1.4rem;
  // Remove the default underline present in anchor tags
  text-decoration: none;
  color: $color-white;
}


// Make use of position: relative and position: absolute CSS trick.

// This box will look for the first parent that has position relative
// or absolute and be bound to it. It'll look from the first parent,
// going up until it reaches the body. If none is found it stops at body.
// Once it finds it, its top, bottom, left and right will be influenced
// by the box of the parent it found and binded to it.
// Imagine this box:
// --------------------------------------------------
// |    <div style="position: absolute"></div>      |
// --------------------------------------------------
// The div inside the box will be trapped inside those borders
// unless negative top, bottom, left or right will be specified.
.#{$class}-box-header {
  // this position absolute goes hand in hand with position relative
  // of the first found parent
  position: absolute;
  // and the width is set to 80% of the parent container
  // 100% - 10% - 10% = 80%
  left: 10%;
  right: 10%;
  // and squeez it on the bottom by 100% height of the parent
  top: 100%;
  // display:flex will make the content behave like inline elements
  display: flex;
  border-bottom-right-radius: 0.5rem;
  border-
}

.#{$class}-box-close,
.#{$class}-box-info {
  padding: 0.4rem;
  background-color: $color-white;
}

.#{$class}-box-info {
  // stretch the box to its available width
  width: 100%;
  border-bottom-left-radius: 0.4rem;
  // don't allow text to break on new line
  white-space: nowrap;
  // hide the text that flows outside the available width
  overflow-x: hidden;
  // and display three dots to let the user know there is more hidden content
  text-overflow: ellipsis;
}

.#{$class}-box {
  margin-bottom: 3rem;
}

.#{$class}-box-close {
  border-bottom-right-radius: 0.4rem;
}
